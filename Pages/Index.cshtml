@page
@using poker.net.Services
@model IndexModel
@{
    ViewData["Title"] = "Poker Calculator | Texas Holdem | John Belthoff";
    ViewData["Description"] = "A C# proof of concept based on Cactus Kev’s Poker Hand Evaluator, showcasing real-time hand ranking and evaluation - not a complete poker app.";
    ViewData["Canonical"] = "https://poker-calculator.johnbelthoff.com/";
}
<div class="container text-center p-5">
    <h1 class="display-4">Poker Calculator</h1>
    <p><a href="/about">About Poker Calculator</a> | <a href="https://github.com/JBelthoff/poker.net" target="_blank">See the code</a> | <a href="https://www.johnbelthoff.com">Studio JB</a></p>
</div>

@if (Model.ShowShufflePanel)
{
    <div class="container p-2">
        <h2>Texas Holdem</h2>
        <form method="post">
            <input type="hidden" asp-for="Game.GameID" />
            <input type="hidden" asp-for="Game.CardIds" />
            <input type="hidden" asp-for="Game.DealerID" />
            @Html.AntiForgeryToken()
            <button type="submit" name="action" value="deal" class="btn btn-dark">Deal</button>
        </form>
    </div>
}

@if (Model.ShowFlopPanel)
{
    <div class="container p-2">
        <h2>Texas Holdem</h2>
        <div class="table-responsive">
            <table class="table table-bordered table-striped text-center align-middle">
                <thead class="table-dark">
                    <tr>
                        @for (int i = 0; i < 9; i++)
                        {
                            var isDealer = (i + 1) == Model.Game.DealerID;
                            <th class="@(isDealer ? "table-info" : "")">@(isDealer ? $"Dealer {i + 1}" : $"Player {i + 1}")</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    <tr>
                    @{
                        int startSeat = (Model.Game.DealerID % 9) + 1;
                    }
                    @for (int i = 0; i < 9; i++)
                    {
                        int pos = ((i + 1 - startSeat + 9) % 9);
                        <td class="text-center" style="white-space: nowrap;">
                            @Html.Raw($"<span style=\"color:#{Model.ShuffledDeck[pos].Color};\">" +
                            $"{Model.ShuffledDeck[pos].Face}{Model.ShuffledDeck[pos].Suit}</span> ")
                            @Html.Raw($"<span style=\"color:#{Model.ShuffledDeck[pos + 9].Color};\">" +
                            $"{Model.ShuffledDeck[pos + 9].Face}{Model.ShuffledDeck[pos + 9].Suit}</span>")
                        </td>
                    }
                    </tr>
                </tbody>
            </table>
        </div>

    <div class="bg-light text-dark p-1 rounded mb-4">
        <h2 class="display-6 fw-semibold mb-3">Community Cards:</h2>
        <p class="lead text-center">&nbsp;&nbsp;</p>
    </div>

    <form method="post">
        <input type="hidden" asp-for="Game.GameID" />
        <input type="hidden" asp-for="Game.CardIds" />
        <input type="hidden" asp-for="Game.DealerID" />
        @Html.AntiForgeryToken()
        <button type="submit" name="action" value="flop" class="btn btn-dark">Deal Flop</button>
        <button type="submit" name="action" value="shuffle" class="btn btn-dark">Shuffle</button>
    </form>
</div>
}

@if (Model.ShowTurnPanel)
{
    <div class="container p-2">
        <h2>Texas Holdem</h2>
        <div class="table-responsive">
            <table class="table table-bordered table-striped text-center align-middle">
                <thead class="table-dark">
                    <tr>
                        @for (int i = 0; i < 9; i++)
                        {
                            var isDealer = (i + 1) == Model.Game.DealerID;
                            <th class="@(isDealer ? "table-info" : "")">@(isDealer ? $"Dealer {i + 1}" : $"Player {i + 1}")</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        @{
                            int startSeat = (Model.Game.DealerID % 9) + 1;
                        }
                        @for (int i = 0; i < 9; i++)
                        {
                            int pos = ((i + 1 - startSeat + 9) % 9);
                            <td class="text-center" style="white-space: nowrap;">
                                @Html.Raw($"<span style=\"color:#{Model.ShuffledDeck[pos].Color};\">" +
                                $"{Model.ShuffledDeck[pos].Face}{Model.ShuffledDeck[pos].Suit}</span> ")
                                @Html.Raw($"<span style=\"color:#{Model.ShuffledDeck[pos + 9].Color};\">" +
                                $"{Model.ShuffledDeck[pos + 9].Face}{Model.ShuffledDeck[pos + 9].Suit}</span>")
                            </td>
                         }
                </tr>
            </tbody>
        </table>
    </div>

    <div class="bg-light text-dark p-1 rounded mb-4">
        <h2 class="display-6 fw-semibold mb-3">Community Cards:</h2>
        <p class="lead text-center">
            @Html.Raw($"""<span style="color:#{Model.ShuffledDeck[18].Color};">{Model.ShuffledDeck[18].Face}{Model.ShuffledDeck[18].Suit}</span>""")
            @Html.Raw($"""<span style="color:#{Model.ShuffledDeck[19].Color};">{Model.ShuffledDeck[19].Face}{Model.ShuffledDeck[19].Suit}</span>""")
            @Html.Raw($"""<span style="color:#{Model.ShuffledDeck[20].Color};">{Model.ShuffledDeck[20].Face}{Model.ShuffledDeck[20].Suit}</span>""")
        </p>
    </div>

    <form method="post">
        <input type="hidden" asp-for="Game.GameID" />
        <input type="hidden" asp-for="Game.CardIds" />
        <input type="hidden" asp-for="Game.DealerID" />
        @Html.AntiForgeryToken()
        <button type="submit" name="action" value="turn" class="btn btn-dark">Deal Turn</button>
        <button type="submit" name="action" value="shuffle" class="btn btn-dark">Shuffle</button>
    </form>
</div>

}

@if (Model.ShowRiverPanel)
{
    <div class="container p-2">
        <h2>Texas Holdem</h2>
        <div class="table-responsive">
            <table class="table table-bordered table-striped text-center align-middle">
                <thead class="table-dark">
                    <tr>
                        @for (int i = 0; i < 9; i++)
                        {
                            var isDealer = (i + 1) == Model.Game.DealerID;
                            <th class="@(isDealer ? "table-info" : "")">@(isDealer ? $"Dealer {i + 1}" : $"Player {i + 1}")</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        @{
                            int startSeat = (Model.Game.DealerID % 9) + 1;
                        }
                        @for (int i = 0; i < 9; i++)
                        {
                            int pos = ((i + 1 - startSeat + 9) % 9);

                            <td class="text-center" style="white-space: nowrap;">
                                @Html.Raw($"<span style=\"color:#{Model.ShuffledDeck[pos].Color};\">" +
                                $"{Model.ShuffledDeck[pos].Face}{Model.ShuffledDeck[pos].Suit}</span> ")
                                @Html.Raw($"<span style=\"color:#{Model.ShuffledDeck[pos + 9].Color};\">" +
                                $"{Model.ShuffledDeck[pos + 9].Face}{Model.ShuffledDeck[pos + 9].Suit}</span>")
                            </td>
                         }
                </tr>
            </tbody>
        </table>
    </div>

    <div class="bg-light text-dark p-1 rounded mb-4">
        <h2 class="display-6 fw-semibold mb-3">Community Cards:</h2>
        <p class="lead text-center">
            @Html.Raw($"""<span style="color:#{Model.ShuffledDeck[18].Color};">{Model.ShuffledDeck[18].Face}{Model.ShuffledDeck[18].Suit}</span>""")
            @Html.Raw($"""<span style="color:#{Model.ShuffledDeck[19].Color};">{Model.ShuffledDeck[19].Face}{Model.ShuffledDeck[19].Suit}</span>""")
            @Html.Raw($"""<span style="color:#{Model.ShuffledDeck[20].Color};">{Model.ShuffledDeck[20].Face}{Model.ShuffledDeck[20].Suit}</span>""")
            @Html.Raw($"""<span style="color:#{Model.ShuffledDeck[21].Color};">{Model.ShuffledDeck[21].Face}{Model.ShuffledDeck[21].Suit}</span>""")
        </p>
    </div>

    <form method="post">
        <input type="hidden" asp-for="Game.GameID" />
        <input type="hidden" asp-for="Game.CardIds" />
        <input type="hidden" asp-for="Game.DealerID" />
        @Html.AntiForgeryToken()
        <button type="submit" name="action" value="river" class="btn btn-dark">Deal River</button>
        <button type="submit" name="action" value="shuffle" class="btn btn-dark">Shuffle</button>
    </form>
</div>

}


@if (Model.ShowWinnerPanel)
{

    <div class="container p-2">
        <h2>Texas Holdem</h2>
        <div class="table-responsive">
            <table class="table table-bordered table-striped text-center align-middle">
                <thead class="table-dark">
                    <tr>
                        @for (int i = 0; i < 9; i++)
                        {
                            var isDealer = (i + 1) == Model.Game.DealerID;
                            <th class="@(isDealer ? "table-info" : "")">@(isDealer ? $"Dealer {i + 1}" : $"Player {i + 1}")</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        @{
                            int startSeat = (Model.Game.DealerID % 9) + 1;
                        }
                        @for (int i = 0; i < 9; i++)
                        {
                            int pos = ((i + 1 - startSeat + 9) % 9);

                            <td class="text-center" style="white-space: nowrap;">
                                @Html.Raw($"<span style=\"color:#{Model.ShuffledDeck[pos].Color};\">" +
                                $"{Model.ShuffledDeck[pos].Face}{Model.ShuffledDeck[pos].Suit}</span> ")
                                @Html.Raw($"<span style=\"color:#{Model.ShuffledDeck[pos + 9].Color};\">" +
                                $"{Model.ShuffledDeck[pos + 9].Face}{Model.ShuffledDeck[pos + 9].Suit}</span>")
                            </td>
                         }
                </tr>
            </tbody>
        </table>
    </div>

    <div class="bg-light text-dark p-1 rounded mb-4">
        <h2 class="display-6 fw-semibold mb-3">Community Cards:</h2>
        <p class="lead text-center">
            @Html.Raw($"""<span style="color:#{Model.ShuffledDeck[18].Color};">{Model.ShuffledDeck[18].Face}{Model.ShuffledDeck[18].Suit}</span>""")
            @Html.Raw($"""<span style="color:#{Model.ShuffledDeck[19].Color};">{Model.ShuffledDeck[19].Face}{Model.ShuffledDeck[19].Suit}</span>""")
            @Html.Raw($"""<span style="color:#{Model.ShuffledDeck[20].Color};">{Model.ShuffledDeck[20].Face}{Model.ShuffledDeck[20].Suit}</span>""")
            @Html.Raw($"""<span style="color:#{Model.ShuffledDeck[21].Color};">{Model.ShuffledDeck[21].Face}{Model.ShuffledDeck[21].Suit}</span>""")
            @Html.Raw($"""<span style="color:#{Model.ShuffledDeck[22].Color};">{Model.ShuffledDeck[22].Face}{Model.ShuffledDeck[22].Suit}</span>""")
        </p>
    </div>


    @{
        var dealerRow = Model.Game.DealerID - 1;
        var seats = new int[9];
        for (int i = 0; i < 9; i++)
            seats[i] = PokerLib.DealOrder[dealerRow, i];
    }

    <h2 class="display-6 fw-semibold mb-3">Results:</h2>
    <div class="table-responsive">
        <table class="table table-bordered table-striped text-center align-middle">
            <thead class="table-dark">
                <tr>
                    @for (int col = 0; col < 9; col++)
                    {
                        var seat = seats[col];
                        var isWinner = Model.h[seat] == Model.iWinValue;
                        <th class="@(isWinner ? "table-success" : "")">@(isWinner ? "WINNER!" : $"Player {col + 1}")</th>
                    }
                </tr>
            </thead>
            <tbody>
                <tr>
                    @for (int col = 0; col < 9; col++)
                    {
                        var seat = seats[col];
                        var hand = Model.lWinners[seat];
                        <td class="text-center">
                            @for (int x = 0; x < hand.Count; x++)
                            {
                                var card = hand[x];
                                @Html.Raw($"""<span style="color:#{card.Color};">{card.Face}{card.Suit}</span>""")
                                if (x < hand.Count - 1)
                                {

                                    @Html.Raw(" ")
                                }
                            }
                        </td>
                    }
                </tr>
                <tr>
                    @for (int col = 0; col < 9; col++)
                    {
                        var seat = seats[col];
                        var isWinner = Model.h[seat] == Model.iWinValue;
                        var isRoyal = Model.h[seat] == 1; // if you use this shortcut
                        var label = isRoyal ? "Royal Flush" : Model.GetNameOfHand(Model.r[seat]);

                        <td class="text-center @(isWinner ? "table-success fw-bold" : "")">
                            @if (isWinner)
                            {
                                @label
                            }
                            else
                            {

                                <em>@label</em>
                            }
                        </td>
                    }
                </tr>
            </tbody>
        </table>
    </div>












    <form method="post">
        <input type="hidden" asp-for="Game.GameID" />
        <input type="hidden" asp-for="Game.CardIds" />
        <input type="hidden" asp-for="Game.DealerID" />
        @Html.AntiForgeryToken()
        <button type="submit" name="action" value="shuffle" class="btn btn-dark">Shuffle</button>
    </form>
</div>
}






@if (Model.ShowTestPanel)
{
    <div class="container p-5">
        <hr style="margin: 24px auto 0 auto;">
        <table>
            <tbody>
                <tr>
                    <th>Deck Shuffled</th>
                </tr>
                <tr>
                    <td>
                        @for (var i = 0; i < Model.ShuffledDeck.Count; i++)
                        {
                            @Html.Raw($"{i}: <span style=\"color:#{Model.ShuffledDeck[i].Color};\">" +
                            $"{Model.ShuffledDeck[i].Face}{Model.ShuffledDeck[i].Suit}</span><br>")
                                        }
                </td>
            </tr>
        </tbody>
    </table>
</div>
}